%start Rocsho
%title "Rocsho grammar"
%comment "Grammar for RocSho programming language"
%line_comment "//"

%%

Rocsho
    : Script;
Script
    : [ Module /---/^ ] BlockInner;
Module
    : { ModuleItem };
ModuleItem
    : FunctionDeclaration;
ComparationExpr
    : ComparationOperand { ( '<=' | '>=' | '<' | '>' | '==' | '!=' ) ComparationOperand };
FunctionDeclaration
    : 'def'^ Identifier '('^ ParameterList ')'^ '='^ Expr ';'^;
ParameterList
    : Pattern { ','^ Pattern };
Block
    : '('^ [ BlockInner ] ')'^;
BlockElement
    : Expr
    | VariableDeclaration;
BlockInner
    : BlockElement { ';'^ BlockElement };
Pattern
    : Identifier;
VariableDeclaration
    : 'let'^ Pattern '='^ Expr;
DecimalIntLiteral
    : /0|[1-9][0-9]*/;
FunctionApplication
    : PrimaryExpression { '('^ [ Expr { ','^ Expr } ] ')'^ };
Expr: If
    | ComparationExpr;
ComparationOperand
    : AddSubExpr;
AddSubExpr
    : AddSubOperand { ( '+' | '-' ) AddSubOperand };
AddSubOperand
    : MulDivExpr;
MulDivExpr
    : MulDivOperand { ( '*' | '/' ) MulDivOperand };
MulDivOperand
    : FunctionApplication;
If  : 'if'^ Expr 'then'^ Expr 'else'^ Expr;
BoolLiteral
    : 'true'
    | 'false';
PrimaryExpression
    : DecimalIntLiteral
    | BoolLiteral
    | Block
    | Identifier;
Identifier
    : /\p{XID_Start}\p{XID_Continue}*/;
